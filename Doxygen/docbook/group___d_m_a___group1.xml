<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___d_m_a___group1" xml:lang="en-US">
<title>Initialization and Configuration functions</title>
<indexterm><primary>Initialization and Configuration functions</primary></indexterm>
<para>

<para>Initialization and Configuration functions. </para>
 
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_group___d_m_a___group1_1ga38d4a4ab8990299f8a6cf064e1e811d0">DMA_DeInit</link> (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> *DMAy_Streamx)</para>

<para>Deinitialize the DMAy Streamx registers to their default reset values. </para>
</listitem>
            <listitem><para>void <link linkend="_group___d_m_a___group1_1gaced8a4149acfb0a50b50e63273a87148">DMA_Init</link> (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> *DMAy_Streamx, <link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link> *DMA_InitStruct)</para>

<para>Initializes the DMAy Streamx according to the specified parameters in the DMA_InitStruct structure. </para>
</listitem>
            <listitem><para>void <link linkend="_group___d_m_a___group1_1ga0f7f95f750a90a6824f4e9b6f58adc7e">DMA_StructInit</link> (<link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link> *DMA_InitStruct)</para>

<para>Fills each DMA_InitStruct member with its default value. </para>
</listitem>
            <listitem><para>void <link linkend="_group___d_m_a___group1_1gab2bea22f9f6dc62fdd7afb385a0c1f73">DMA_Cmd</link> (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> *DMAy_Streamx, FunctionalState NewState)</para>

<para>Enables or disables the specified DMAy Streamx. </para>
</listitem>
            <listitem><para>void <link linkend="_group___d_m_a___group1_1ga210a9861460b3c9b3fa14fdc1a949744">DMA_PeriphIncOffsetSizeConfig</link> (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> *DMAy_Streamx, uint32_t DMA_Pincos)</para>

<para>Configures, when the PINC (Peripheral Increment address mode) bit is set, if the peripheral address should be incremented with the data size (configured with PSIZE bits) or by a fixed offset equal to 4 (32-bit aligned addresses). </para>
</listitem>
            <listitem><para>void <link linkend="_group___d_m_a___group1_1ga77f7628f6be9d6d088127eceb090b8b2">DMA_FlowControllerConfig</link> (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> *DMAy_Streamx, uint32_t DMA_FlowCtrl)</para>

<para>Configures, when the DMAy Streamx is disabled, the flow controller for the next transactions (Peripheral or Memory). </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Initialization and Configuration functions. </para>

<para><literallayout><computeroutput> ===============================================================================
                 Initialization and Configuration functions
 ===============================================================================  

  This subsection provides functions allowing to initialize the DMA Stream source
  and destination addresses, incrementation and data sizes, transfer direction, 
  buffer size, circular/normal mode selection, memory-to-memory mode selection 
  and Stream priority value.
  
  The DMA_Init() function follows the DMA configuration procedures as described in
  reference manual (RM0090) except the first point: waiting on EN bit to be reset.
  This condition should be checked by user application using the function DMA_GetCmdStatus()
  before calling the DMA_Init() function.</computeroutput></literallayout> </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___d_m_a___group1_1gab2bea22f9f6dc62fdd7afb385a0c1f73"/><section>
    <title>DMA_Cmd()</title>
<indexterm><primary>DMA_Cmd</primary><secondary>Initialization and Configuration functions</secondary></indexterm>
<indexterm><primary>Initialization and Configuration functions</primary><secondary>DMA_Cmd</secondary></indexterm>
<para><computeroutput>void DMA_Cmd (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> * DMAy_Streamx, FunctionalState NewState)</computeroutput></para><para>

<para>Enables or disables the specified DMAy Streamx. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DMAy_Streamx</entry><entry>
<para>where y can be 1 or 2 to select the DMA and x can be 0 to 7 to select the DMA Stream. </para>
</entry>
                            </row>
                            <row>
<entry>NewState</entry><entry>
<para>new state of the DMAy Streamx. This parameter can be: ENABLE or DISABLE.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>This function may be used to perform Pause-Resume operation. When a transfer is ongoing, calling this function to disable the Stream will cause the transfer to be paused. All configuration registers and the number of remaining data will be preserved. When calling again this function to re-enable the Stream, the transfer will be resumed from the point where it was paused. <?linebreak?></para>

<para>After configuring the DMA Stream (<link linkend="_group___d_m_a___group1_1gaced8a4149acfb0a50b50e63273a87148">DMA_Init()</link> function) and enabling the stream, it is recommended to check (or wait until) the DMA Stream is effectively enabled. A Stream may remain disabled if a configuration parameter is wrong. After disabling a DMA Stream, it is also recommended to check (or wait until) the DMA Stream is effectively disabled. If a Stream is disabled while a data transfer is ongoing, the current data will be transferred and the Stream will be effectively disabled only after the transfer of this single data is finished. <?linebreak?></para>
</note>

                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___d_m_a___group1_1ga38d4a4ab8990299f8a6cf064e1e811d0"/><section>
    <title>DMA_DeInit()</title>
<indexterm><primary>DMA_DeInit</primary><secondary>Initialization and Configuration functions</secondary></indexterm>
<indexterm><primary>Initialization and Configuration functions</primary><secondary>DMA_DeInit</secondary></indexterm>
<para><computeroutput>void DMA_DeInit (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> * DMAy_Streamx)</computeroutput></para><para>

<para>Deinitialize the DMAy Streamx registers to their default reset values. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DMAy_Streamx</entry><entry>
<para>where y can be 1 or 2 to select the DMA and x can be 0 to 7 to select the DMA Stream. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___d_m_a___group1_1ga77f7628f6be9d6d088127eceb090b8b2"/><section>
    <title>DMA_FlowControllerConfig()</title>
<indexterm><primary>DMA_FlowControllerConfig</primary><secondary>Initialization and Configuration functions</secondary></indexterm>
<indexterm><primary>Initialization and Configuration functions</primary><secondary>DMA_FlowControllerConfig</secondary></indexterm>
<para><computeroutput>void DMA_FlowControllerConfig (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> * DMAy_Streamx, uint32_t DMA_FlowCtrl)</computeroutput></para><para>

<para>Configures, when the DMAy Streamx is disabled, the flow controller for the next transactions (Peripheral or Memory). </para>
</para>

<para><note><title>Note</title>

<para>Before enabling this feature, check if the used peripheral supports the Flow Controller mode or not. <?linebreak?></para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DMAy_Streamx</entry><entry>
<para>where y can be 1 or 2 to select the DMA and x can be 0 to 7 to select the DMA Stream. </para>
</entry>
                            </row>
                            <row>
<entry>DMA_FlowCtrl</entry><entry>
<para>specifies the DMA flow controller. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>DMA_FlowCtrl_Memory: DMAy_Streamx transactions flow controller is the DMA controller. </para>
</listitem>
<listitem>
<para>DMA_FlowCtrl_Peripheral: DMAy_Streamx transactions flow controller is the peripheral. <?linebreak?> </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___d_m_a___group1_1gaced8a4149acfb0a50b50e63273a87148"/><section>
    <title>DMA_Init()</title>
<indexterm><primary>DMA_Init</primary><secondary>Initialization and Configuration functions</secondary></indexterm>
<indexterm><primary>Initialization and Configuration functions</primary><secondary>DMA_Init</secondary></indexterm>
<para><computeroutput>void DMA_Init (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> * DMAy_Streamx, <link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link> * DMA_InitStruct)</computeroutput></para><para>

<para>Initializes the DMAy Streamx according to the specified parameters in the DMA_InitStruct structure. </para>
</para>

<para><note><title>Note</title>

<para>Before calling this function, it is recommended to check that the Stream is actually disabled using the function <link linkend="_group___d_m_a___group4_1gaa4d631cdd6cd020106435f30c0c6fb15">DMA_GetCmdStatus()</link>. <?linebreak?> </para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DMAy_Streamx</entry><entry>
<para>where y can be 1 or 2 to select the DMA and x can be 0 to 7 to select the DMA Stream. </para>
</entry>
                            </row>
                            <row>
<entry>DMA_InitStruct</entry><entry>
<para>pointer to a <link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link> structure that contains the configuration information for the specified DMA Stream. <?linebreak?> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___d_m_a___group1_1ga210a9861460b3c9b3fa14fdc1a949744"/><section>
    <title>DMA_PeriphIncOffsetSizeConfig()</title>
<indexterm><primary>DMA_PeriphIncOffsetSizeConfig</primary><secondary>Initialization and Configuration functions</secondary></indexterm>
<indexterm><primary>Initialization and Configuration functions</primary><secondary>DMA_PeriphIncOffsetSizeConfig</secondary></indexterm>
<para><computeroutput>void DMA_PeriphIncOffsetSizeConfig (<link linkend="_struct_d_m_a___stream___type_def">DMA_Stream_TypeDef</link> * DMAy_Streamx, uint32_t DMA_Pincos)</computeroutput></para><para>

<para>Configures, when the PINC (Peripheral Increment address mode) bit is set, if the peripheral address should be incremented with the data size (configured with PSIZE bits) or by a fixed offset equal to 4 (32-bit aligned addresses). </para>
</para>

<para><note><title>Note</title>

<para>This function has no effect if the Peripheral Increment mode is disabled.</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DMAy_Streamx</entry><entry>
<para>where y can be 1 or 2 to select the DMA and x can be 0 to 7 to select the DMA Stream. </para>
</entry>
                            </row>
                            <row>
<entry>DMA_Pincos</entry><entry>
<para>specifies the Peripheral increment offset size. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>DMA_PINCOS_Psize: Peripheral address increment is done <?linebreak?> accordingly to PSIZE parameter. </para>
</listitem>
<listitem>
<para>DMA_PINCOS_WordAligned: Peripheral address increment offset is fixed to 4 (32-bit aligned addresses). </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___d_m_a___group1_1ga0f7f95f750a90a6824f4e9b6f58adc7e"/><section>
    <title>DMA_StructInit()</title>
<indexterm><primary>DMA_StructInit</primary><secondary>Initialization and Configuration functions</secondary></indexterm>
<indexterm><primary>Initialization and Configuration functions</primary><secondary>DMA_StructInit</secondary></indexterm>
<para><computeroutput>void DMA_StructInit (<link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link> * DMA_InitStruct)</computeroutput></para><para>

<para>Fills each DMA_InitStruct member with its default value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DMA_InitStruct</entry><entry>
<para>: pointer to a <link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link> structure which will be initialized. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
