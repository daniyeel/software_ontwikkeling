<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__u_a_r_t__communication_8h_source" xml:lang="en-US">
<title>UART_communication.h</title>
<indexterm><primary>CUBE_IDE/VGA/Core/Inc/UART_communication.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*******************************************************/</emphasis>
12 <emphasis role="preprocessor">#ifndef&#32;INC_UART_COMMUNICATION_H_</emphasis>
13 <emphasis role="preprocessor">#define&#32;INC_UART_COMMUNICATION_H_</emphasis>
14 
15 <emphasis role="comment">//#include&#32;&lt;library-header&gt;</emphasis>
16 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
17 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
18 
19 <emphasis role="comment">//#include&#32;other&#32;&quot;user-header&quot;</emphasis>
20 <emphasis role="preprocessor">#include&#32;&quot;main.h&quot;</emphasis>
21 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_error_8h">error.h</link>&quot;</emphasis>
22 
23 <emphasis role="comment">//#define-statements</emphasis>
24 <emphasis role="preprocessor">#define&#32;WAIT_FOR_DATA&#32;&#32;&#32;4000000</emphasis>
25 <emphasis role="preprocessor">#define&#32;STORAGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;100</emphasis>
26 <emphasis role="preprocessor">#define&#32;NO_DATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;69</emphasis>
27 
28 <emphasis role="comment">//external&#32;vars</emphasis>
29 
30 
31 <emphasis role="comment">//struct&#32;definition</emphasis>
32 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_a_r_t___communication">UART_Communication</link>
33 {
34 &#32;&#32;&#32;&#32;uint8_t&#32;receive[STORAGE];
35 &#32;&#32;&#32;&#32;uint8_t&#32;buffer[STORAGE];
36 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;err_code;
37 }<link linkend="_struct_u_a_r_t___communication">UART</link>,&#32;*<link linkend="_struct_u_a_r_t___communication">PUART</link>;
38 
39 <emphasis role="comment">//user&#32;functies</emphasis>
40 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__u_a_r_t__communication_8h_1ab84e9f0a99ba6731a4e7d3dfc40493b3">UART2_config</link>(<emphasis role="keywordtype">void</emphasis>);
41 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__u_a_r_t__communication_8h_1add4232249b0688ce38e69d9899550ba0">UART_sendChar</link>(uint8_t&#32;c);
42 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__u_a_r_t__communication_8h_1a8634cca4ce3fd979b63eabbe926e1ae0">UART_sendString</link>(<emphasis role="keywordtype">char</emphasis>&#32;*<emphasis role="keywordtype">string</emphasis>);
43 uint8_t&#32;<link linkend="__u_a_r_t__communication_8h_1aae7c3d4380da5daac337818d429241ad">UART_getChar</link>(<emphasis role="keywordtype">void</emphasis>);
44 <link linkend="_struct_u_a_r_t___communication">UART</link>&#32;<link linkend="__u_a_r_t__communication_8h_1a2387a595d989ba4d08da460927caf5c8">UART_receiver</link>(<emphasis role="keywordtype">void</emphasis>);
45 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__u_a_r_t__communication_8h_1a2f2a2e6b820f5815970edc1989b95857">UART_errorHandling</link>(<emphasis role="keywordtype">int</emphasis>&#32;err);
46 
47 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INC_UART_COMMUNICATION_H_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
