<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___g_p_i_o" xml:lang="en-US">
<title>GPIO</title>
<indexterm><primary>GPIO</primary></indexterm>
<para>

<para>GPIO driver modules. </para>
 
</para>
<simplesect>
    <title>Modules    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group___g_p_i_o___exported___constants">GPIO_Exported_Constants</link></para>
</listitem>
            <listitem><para><link linkend="_group___g_p_i_o___private___functions">GPIO_Private_Functions</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link></para>

<para>GPIO Init structure definition <?linebreak?> </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1ga68b2a1f0b05c13978217db5439c7f790">IS_GPIO_ALL_PERIPH</link>(PERIPH)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1gacc5fde3eef57ec3c558c11d0011d900c">IS_GPIO_MODE</link>(MODE)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1ga7145550a414f2b0455d79ddde6100af8"/>#define <emphasis role="strong">IS_GPIO_OTYPE</emphasis>(OTYPE)&#160;&#160;&#160;(((OTYPE) == GPIO_OType_PP) || ((OTYPE) == GPIO_OType_OD))</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1ga888e1f951df2fe9dbf827528051a3a56">IS_GPIO_SPEED</link>(SPEED)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1gae30c92591d1f29dbd594ac3cd855b503">IS_GPIO_PUPD</link>(PUPD)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1ga6b882caa8ed9857c5c7267959a7818c5"/>#define <emphasis role="strong">IS_GPIO_BIT_ACTION</emphasis>(ACTION)&#160;&#160;&#160;(((ACTION) == Bit_RESET) || ((ACTION) == Bit_SET))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group___g_p_i_o_1ga1347339e1c84a196fabbb31205eec5d4">GPIOMode_TypeDef</link> { <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a484aa18a6156ce916049b334ba1839de">GPIO_Mode_IN</link> = 0x00
, <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a60f1d530f4119efcad8e1a68c890c6a6">GPIO_Mode_OUT</link> = 0x01
, <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6d44c35c6c5008d85bac9251a867e701">GPIO_Mode_AF</link> = 0x02
, <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6e5c0d7e6d2e22b834b24e1ca1d6d0db">GPIO_Mode_AN</link> = 0x03
 }</para>

<para>GPIO Configuration Mode enumeration. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1gae74212e8d66c389f47326b06bdf6d2ab"/>enum <link linkend="_group___g_p_i_o_1gae74212e8d66c389f47326b06bdf6d2ab">GPIOOType_TypeDef</link> { <emphasis role="strong">GPIO_OType_PP</emphasis> = 0x00
, <emphasis role="strong">GPIO_OType_OD</emphasis> = 0x01
 }</para>

<para>GPIO Output type enumeration. </para>
</listitem>
            <listitem><para>enum <link linkend="_group___g_p_i_o_1ga062ad92b67b4a1f301c161022cf3ba8e">GPIOSpeed_TypeDef</link> { <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9bff9e174639332007c914483361be18">GPIO_Speed_2MHz</link> = 0x00
, <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea59a0acdf2ccd1b4b8d507e845e497c62">GPIO_Speed_25MHz</link> = 0x01
, <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9c47db10456202ac05134b12738ce581">GPIO_Speed_50MHz</link> = 0x02
, <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea195a0e73cd63d7f5b5d41bd0155eacbb">GPIO_Speed_100MHz</link> = 0x03
 }</para>

<para>GPIO Output Maximum frequency enumeration. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1gafb7ecd99c44b4fd702d669304a36c2c8"/>enum <link linkend="_group___g_p_i_o_1gafb7ecd99c44b4fd702d669304a36c2c8">GPIOPuPd_TypeDef</link> { <emphasis role="strong">GPIO_PuPd_NOPULL</emphasis> = 0x00
, <emphasis role="strong">GPIO_PuPd_UP</emphasis> = 0x01
, <emphasis role="strong">GPIO_PuPd_DOWN</emphasis> = 0x02
 }</para>

<para>GPIO Configuration PullUp PullDown enumeration. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19"/>enum <link linkend="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19">BitAction</link> { <emphasis role="strong">Bit_RESET</emphasis> = 0
, <emphasis role="strong">Bit_SET</emphasis>
 }</para>

<para>GPIO Bit SET and Bit RESET enumeration. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gaa60bdf3182c44b5fa818f237042f52ee">GPIO_DeInit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx)</para>

<para>Deinitializes the GPIOx peripheral registers to their default reset values. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga71abf9404261370d03cca449b88d3a65">GPIO_Init</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> *GPIO_InitStruct)</para>

<para>Initializes the GPIOx peripheral according to the specified parameters in the GPIO_InitStruct. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gab28de41278e7f8c63d0851e2733b10df">GPIO_StructInit</link> (<link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> *GPIO_InitStruct)</para>

<para>Fills each GPIO_InitStruct member with its default value. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gad2f2e615928c69fd0d8c641a7cedaafc">GPIO_PinLockConfig</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Locks GPIO Pins configuration registers. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___g_p_i_o_1ga98772ef6b639b3fa06c8ae5ba28d3aaa">GPIO_ReadInputDataBit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Reads the specified input port pin. </para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group___g_p_i_o_1ga139a33adc8409288e9f193bbebb5a0f7">GPIO_ReadInputData</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx)</para>

<para>Reads the specified GPIO input data port. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___g_p_i_o_1ga138270f8695b105b7c6ed405792919c1">GPIO_ReadOutputDataBit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Reads the specified output data port bit. </para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group___g_p_i_o_1gaf8938a34280b7dc3e39872a7c17bb323">GPIO_ReadOutputData</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx)</para>

<para>Reads the specified GPIO output data port. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga9e1352eed7c6620e18af2d86f6b6ff8e">GPIO_SetBits</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Sets the selected data port bits. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga6fcd35b207a66608dd2c9d7de9247dc8">GPIO_ResetBits</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Clears the selected data port bits. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga8f7b237fd744d9f7456fbe0da47a9b80">GPIO_WriteBit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin, <link linkend="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19">BitAction</link> BitVal)</para>

<para>Sets or clears the selected data port bit. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gaa925f19c8547a00c7a0c269a84873bf9">GPIO_Write</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t PortVal)</para>

<para>Writes data to the specified GPIO data port. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gac1b837c66258872740d5f89f23549ab1">GPIO_ToggleBits</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Toggles the specified GPIO pins.. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga0a77617a322562ae84f8d72486032c5d">GPIO_PinAFConfig</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)</para>

<para>Changes the mapping of the specified pin. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>GPIO driver modules. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___g_p_i_o_1ga68b2a1f0b05c13978217db5439c7f790"/><section>
    <title>IS_GPIO_ALL_PERIPH</title>
<indexterm><primary>IS_GPIO_ALL_PERIPH</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>IS_GPIO_ALL_PERIPH</secondary></indexterm>
<para><computeroutput>#define IS_GPIO_ALL_PERIPH( PERIPH)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((PERIPH)&#32;==&#32;GPIOA)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOB)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOC)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOD)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOE)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOF)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOG)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOH)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PERIPH)&#32;==&#32;GPIOI))
</programlisting></section>
<anchor xml:id="_group___g_p_i_o_1gacc5fde3eef57ec3c558c11d0011d900c"/><section>
    <title>IS_GPIO_MODE</title>
<indexterm><primary>IS_GPIO_MODE</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>IS_GPIO_MODE</secondary></indexterm>
<para><computeroutput>#define IS_GPIO_MODE( MODE)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((MODE)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a484aa18a6156ce916049b334ba1839de">GPIO_Mode_IN</link>)&#32;&#32;||&#32;((MODE)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a60f1d530f4119efcad8e1a68c890c6a6">GPIO_Mode_OUT</link>)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((MODE)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6d44c35c6c5008d85bac9251a867e701">GPIO_Mode_AF</link>)||&#32;((MODE)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6e5c0d7e6d2e22b834b24e1ca1d6d0db">GPIO_Mode_AN</link>))
</programlisting></section>
<anchor xml:id="_group___g_p_i_o_1gae30c92591d1f29dbd594ac3cd855b503"/><section>
    <title>IS_GPIO_PUPD</title>
<indexterm><primary>IS_GPIO_PUPD</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>IS_GPIO_PUPD</secondary></indexterm>
<para><computeroutput>#define IS_GPIO_PUPD( PUPD)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((PUPD)&#32;==&#32;GPIO_PuPd_NOPULL)&#32;||&#32;((PUPD)&#32;==&#32;GPIO_PuPd_UP)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((PUPD)&#32;==&#32;GPIO_PuPd_DOWN))
</programlisting></section>
<anchor xml:id="_group___g_p_i_o_1ga888e1f951df2fe9dbf827528051a3a56"/><section>
    <title>IS_GPIO_SPEED</title>
<indexterm><primary>IS_GPIO_SPEED</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>IS_GPIO_SPEED</secondary></indexterm>
<para><computeroutput>#define IS_GPIO_SPEED( SPEED)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((SPEED)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9bff9e174639332007c914483361be18">GPIO_Speed_2MHz</link>)&#32;||&#32;((SPEED)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea59a0acdf2ccd1b4b8d507e845e497c62">GPIO_Speed_25MHz</link>)&#32;||&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((SPEED)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9c47db10456202ac05134b12738ce581">GPIO_Speed_50MHz</link>)||&#32;&#32;((SPEED)&#32;==&#32;<link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea195a0e73cd63d7f5b5d41bd0155eacbb">GPIO_Speed_100MHz</link>))
</programlisting></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_group___g_p_i_o_1ga1347339e1c84a196fabbb31205eec5d4"/><section>
    <title>GPIOMode_TypeDef</title>
<indexterm><primary>GPIOMode_TypeDef</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIOMode_TypeDef</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___g_p_i_o_1ga1347339e1c84a196fabbb31205eec5d4">GPIOMode_TypeDef</link></computeroutput></para><para>

<para>GPIO Configuration Mode enumeration. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>GPIO_Mode_IN</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Mode_IN</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a484aa18a6156ce916049b334ba1839de"/>GPIO_Mode_IN</entry><entry>
<para>GPIO Input Mode </para>
</entry></row><row><entry><indexterm><primary>GPIO_Mode_OUT</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Mode_OUT</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a60f1d530f4119efcad8e1a68c890c6a6"/>GPIO_Mode_OUT</entry><entry>
<para>GPIO Output Mode </para>
</entry></row><row><entry><indexterm><primary>GPIO_Mode_AF</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Mode_AF</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6d44c35c6c5008d85bac9251a867e701"/>GPIO_Mode_AF</entry><entry>
<para>GPIO Alternate function Mode </para>
</entry></row><row><entry><indexterm><primary>GPIO_Mode_AN</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Mode_AN</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6e5c0d7e6d2e22b834b24e1ca1d6d0db"/>GPIO_Mode_AN</entry><entry>
<para>GPIO Analog Mode </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_group___g_p_i_o_1ga062ad92b67b4a1f301c161022cf3ba8e"/><section>
    <title>GPIOSpeed_TypeDef</title>
<indexterm><primary>GPIOSpeed_TypeDef</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIOSpeed_TypeDef</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___g_p_i_o_1ga062ad92b67b4a1f301c161022cf3ba8e">GPIOSpeed_TypeDef</link></computeroutput></para><para>

<para>GPIO Output Maximum frequency enumeration. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>GPIO_Speed_2MHz</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Speed_2MHz</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9bff9e174639332007c914483361be18"/>GPIO_Speed_2MHz</entry><entry>
<para>Low speed </para>
</entry></row><row><entry><indexterm><primary>GPIO_Speed_25MHz</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Speed_25MHz</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea59a0acdf2ccd1b4b8d507e845e497c62"/>GPIO_Speed_25MHz</entry><entry>
<para>Medium speed </para>
</entry></row><row><entry><indexterm><primary>GPIO_Speed_50MHz</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Speed_50MHz</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9c47db10456202ac05134b12738ce581"/>GPIO_Speed_50MHz</entry><entry>
<para>Fast speed </para>
</entry></row><row><entry><indexterm><primary>GPIO_Speed_100MHz</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Speed_100MHz</secondary></indexterm>
<anchor xml:id="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea195a0e73cd63d7f5b5d41bd0155eacbb"/>GPIO_Speed_100MHz</entry><entry>
<para>High speed on 30 pF (80 MHz Output max speed on 15 pF) </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___g_p_i_o_1gaa60bdf3182c44b5fa818f237042f52ee"/><section>
    <title>GPIO_DeInit()</title>
<indexterm><primary>GPIO_DeInit</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_DeInit</secondary></indexterm>
<para><computeroutput>void GPIO_DeInit (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx)</computeroutput></para><para>

<para>Deinitializes the GPIOx peripheral registers to their default reset values. </para>
</para>

<para><note><title>Note</title>

<para>By default, The GPIO pins are configured in input floating mode (except JTAG pins). </para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga71abf9404261370d03cca449b88d3a65"/><section>
    <title>GPIO_Init()</title>
<indexterm><primary>GPIO_Init</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Init</secondary></indexterm>
<para><computeroutput>void GPIO_Init (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> * GPIO_InitStruct)</computeroutput></para><para>

<para>Initializes the GPIOx peripheral according to the specified parameters in the GPIO_InitStruct. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_InitStruct</entry><entry>
<para>pointer to a <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> structure that contains the configuration information for the specified GPIO peripheral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga0a77617a322562ae84f8d72486032c5d"/><section>
    <title>GPIO_PinAFConfig()</title>
<indexterm><primary>GPIO_PinAFConfig</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_PinAFConfig</secondary></indexterm>
<para><computeroutput>void GPIO_PinAFConfig (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)</computeroutput></para><para>

<para>Changes the mapping of the specified pin. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_PinSource</entry><entry>
<para>specifies the pin for the Alternate function. This parameter can be GPIO_PinSourcex where x can be (0..15). </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_AFSelection</entry><entry>
<para>selects the pin to used as Alternate function. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) </para>
</listitem>
<listitem>
<para>GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) </para>
</listitem>
<listitem>
<para>GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default after reset) </para>
</listitem>
<listitem>
<para>GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) </para>
</listitem>
<listitem>
<para>GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset) </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM1: Connect TIM1 pins to AF1 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM2: Connect TIM2 pins to AF1 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM3: Connect TIM3 pins to AF2 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM4: Connect TIM4 pins to AF2 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM5: Connect TIM5 pins to AF2 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM8: Connect TIM8 pins to AF3 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM9: Connect TIM9 pins to AF3 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM10: Connect TIM10 pins to AF3 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM11: Connect TIM11 pins to AF3 </para>
</listitem>
<listitem>
<para>GPIO_AF_I2C1: Connect I2C1 pins to AF4 </para>
</listitem>
<listitem>
<para>GPIO_AF_I2C2: Connect I2C2 pins to AF4 </para>
</listitem>
<listitem>
<para>GPIO_AF_I2C3: Connect I2C3 pins to AF4 </para>
</listitem>
<listitem>
<para>GPIO_AF_SPI1: Connect SPI1 pins to AF5 </para>
</listitem>
<listitem>
<para>GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5 </para>
</listitem>
<listitem>
<para>GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6 </para>
</listitem>
<listitem>
<para>GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7 </para>
</listitem>
<listitem>
<para>GPIO_AF_USART1: Connect USART1 pins to AF7 </para>
</listitem>
<listitem>
<para>GPIO_AF_USART2: Connect USART2 pins to AF7 </para>
</listitem>
<listitem>
<para>GPIO_AF_USART3: Connect USART3 pins to AF7 </para>
</listitem>
<listitem>
<para>GPIO_AF_UART4: Connect UART4 pins to AF8 </para>
</listitem>
<listitem>
<para>GPIO_AF_UART5: Connect UART5 pins to AF8 </para>
</listitem>
<listitem>
<para>GPIO_AF_USART6: Connect USART6 pins to AF8 </para>
</listitem>
<listitem>
<para>GPIO_AF_CAN1: Connect CAN1 pins to AF9 </para>
</listitem>
<listitem>
<para>GPIO_AF_CAN2: Connect CAN2 pins to AF9 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM12: Connect TIM12 pins to AF9 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM13: Connect TIM13 pins to AF9 </para>
</listitem>
<listitem>
<para>GPIO_AF_TIM14: Connect TIM14 pins to AF9 </para>
</listitem>
<listitem>
<para>GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10 </para>
</listitem>
<listitem>
<para>GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10 </para>
</listitem>
<listitem>
<para>GPIO_AF_ETH: Connect ETHERNET pins to AF11 </para>
</listitem>
<listitem>
<para>GPIO_AF_FSMC: Connect FSMC pins to AF12 </para>
</listitem>
<listitem>
<para>GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12 </para>
</listitem>
<listitem>
<para>GPIO_AF_SDIO: Connect SDIO pins to AF12 </para>
</listitem>
<listitem>
<para>GPIO_AF_DCMI: Connect DCMI pins to AF13 </para>
</listitem>
<listitem>
<para>GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15 </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1gad2f2e615928c69fd0d8c641a7cedaafc"/><section>
    <title>GPIO_PinLockConfig()</title>
<indexterm><primary>GPIO_PinLockConfig</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_PinLockConfig</secondary></indexterm>
<para><computeroutput>void GPIO_PinLockConfig (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin)</computeroutput></para><para>

<para>Locks GPIO Pins configuration registers. </para>
</para>

<para><note><title>Note</title>

<para>The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR, GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH. </para>

<para>The configuration of the locked GPIO pins can no longer be modified until the next reset. </para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>specifies the port bit to be locked. This parameter can be any combination of GPIO_Pin_x where x can be (0..15). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga139a33adc8409288e9f193bbebb5a0f7"/><section>
    <title>GPIO_ReadInputData()</title>
<indexterm><primary>GPIO_ReadInputData</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_ReadInputData</secondary></indexterm>
<para><computeroutput>uint16_t GPIO_ReadInputData (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx)</computeroutput></para><para>

<para>Reads the specified GPIO input data port. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIO</entry><entry>
<para>input data port value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga98772ef6b639b3fa06c8ae5ba28d3aaa"/><section>
    <title>GPIO_ReadInputDataBit()</title>
<indexterm><primary>GPIO_ReadInputDataBit</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_ReadInputDataBit</secondary></indexterm>
<para><computeroutput>uint8_t GPIO_ReadInputDataBit (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin)</computeroutput></para><para>

<para>Reads the specified input port pin. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>specifies the port bit to read. This parameter can be GPIO_Pin_x where x can be (0..15). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>The</entry><entry>
<para>input port pin value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1gaf8938a34280b7dc3e39872a7c17bb323"/><section>
    <title>GPIO_ReadOutputData()</title>
<indexterm><primary>GPIO_ReadOutputData</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_ReadOutputData</secondary></indexterm>
<para><computeroutput>uint16_t GPIO_ReadOutputData (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx)</computeroutput></para><para>

<para>Reads the specified GPIO output data port. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIO</entry><entry>
<para>output data port value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga138270f8695b105b7c6ed405792919c1"/><section>
    <title>GPIO_ReadOutputDataBit()</title>
<indexterm><primary>GPIO_ReadOutputDataBit</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_ReadOutputDataBit</secondary></indexterm>
<para><computeroutput>uint8_t GPIO_ReadOutputDataBit (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin)</computeroutput></para><para>

<para>Reads the specified output data port bit. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>specifies the port bit to read. This parameter can be GPIO_Pin_x where x can be (0..15). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>The</entry><entry>
<para>output port pin value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga6fcd35b207a66608dd2c9d7de9247dc8"/><section>
    <title>GPIO_ResetBits()</title>
<indexterm><primary>GPIO_ResetBits</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_ResetBits</secondary></indexterm>
<para><computeroutput>void GPIO_ResetBits (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin)</computeroutput></para><para>

<para>Clears the selected data port bits. </para>
</para>

<para><note><title>Note</title>

<para>This functions uses GPIOx_BSRR register to allow atomic read/modify accesses. In this way, there is no risk of an IRQ occurring between the read and the modify access. </para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>specifies the port bits to be written. This parameter can be any combination of GPIO_Pin_x where x can be (0..15). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga9e1352eed7c6620e18af2d86f6b6ff8e"/><section>
    <title>GPIO_SetBits()</title>
<indexterm><primary>GPIO_SetBits</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_SetBits</secondary></indexterm>
<para><computeroutput>void GPIO_SetBits (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin)</computeroutput></para><para>

<para>Sets the selected data port bits. </para>
</para>

<para><note><title>Note</title>

<para>This functions uses GPIOx_BSRR register to allow atomic read/modify accesses. In this way, there is no risk of an IRQ occurring between the read and the modify access. </para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>specifies the port bits to be written. This parameter can be any combination of GPIO_Pin_x where x can be (0..15). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1gab28de41278e7f8c63d0851e2733b10df"/><section>
    <title>GPIO_StructInit()</title>
<indexterm><primary>GPIO_StructInit</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_StructInit</secondary></indexterm>
<para><computeroutput>void GPIO_StructInit (<link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> * GPIO_InitStruct)</computeroutput></para><para>

<para>Fills each GPIO_InitStruct member with its default value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIO_InitStruct</entry><entry>
<para>: pointer to a <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> structure which will be initialized. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1gac1b837c66258872740d5f89f23549ab1"/><section>
    <title>GPIO_ToggleBits()</title>
<indexterm><primary>GPIO_ToggleBits</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_ToggleBits</secondary></indexterm>
<para><computeroutput>void GPIO_ToggleBits (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin)</computeroutput></para><para>

<para>Toggles the specified GPIO pins.. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>Specifies the pins to be toggled. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1gaa925f19c8547a00c7a0c269a84873bf9"/><section>
    <title>GPIO_Write()</title>
<indexterm><primary>GPIO_Write</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_Write</secondary></indexterm>
<para><computeroutput>void GPIO_Write (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t PortVal)</computeroutput></para><para>

<para>Writes data to the specified GPIO data port. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>PortVal</entry><entry>
<para>specifies the value to be written to the port output data register. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group___g_p_i_o_1ga8f7b237fd744d9f7456fbe0da47a9b80"/><section>
    <title>GPIO_WriteBit()</title>
<indexterm><primary>GPIO_WriteBit</primary><secondary>GPIO</secondary></indexterm>
<indexterm><primary>GPIO</primary><secondary>GPIO_WriteBit</secondary></indexterm>
<para><computeroutput>void GPIO_WriteBit (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> * GPIOx, uint16_t GPIO_Pin, <link linkend="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19">BitAction</link> BitVal)</computeroutput></para><para>

<para>Sets or clears the selected data port bit. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GPIOx</entry><entry>
<para>where x can be (A..I) to select the GPIO peripheral. </para>
</entry>
                            </row>
                            <row>
<entry>GPIO_Pin</entry><entry>
<para>specifies the port bit to be written. This parameter can be one of GPIO_Pin_x where x can be (0..15). </para>
</entry>
                            </row>
                            <row>
<entry>BitVal</entry><entry>
<para>specifies the value to be written to the selected bit. This parameter can be one of the BitAction enum values: <itemizedlist>
<listitem>
<para>Bit_RESET: to clear the port pin </para>
</listitem>
<listitem>
<para>Bit_SET: to set the port pin </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
