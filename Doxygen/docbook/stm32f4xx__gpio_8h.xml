<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f4xx__gpio_8h" xml:lang="en-US">
<title>CUBE_IDE/VGA/Core/Inc/stm32f4xx_gpio.h File Reference</title>
<indexterm><primary>CUBE_IDE/VGA/Core/Inc/stm32f4xx_gpio.h</primary></indexterm>
<para>

<para>This file contains all the functions prototypes for the GPIO firmware library. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;stm32f4xx.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link></para>

<para>GPIO Init structure definition <?linebreak?> </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1ga68b2a1f0b05c13978217db5439c7f790">IS_GPIO_ALL_PERIPH</link>(PERIPH)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1gacc5fde3eef57ec3c558c11d0011d900c">IS_GPIO_MODE</link>(MODE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_GPIO_OTYPE</emphasis>(OTYPE)&#160;&#160;&#160;(((OTYPE) == GPIO_OType_PP) || ((OTYPE) == GPIO_OType_OD))</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1ga888e1f951df2fe9dbf827528051a3a56">IS_GPIO_SPEED</link>(SPEED)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o_1gae30c92591d1f29dbd594ac3cd855b503">IS_GPIO_PUPD</link>(PUPD)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_GPIO_BIT_ACTION</emphasis>(ACTION)&#160;&#160;&#160;(((ACTION) == Bit_RESET) || ((ACTION) == Bit_SET))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_0</emphasis>&#160;&#160;&#160;((uint16_t)0x0001)  /* Pin 0 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_1</emphasis>&#160;&#160;&#160;((uint16_t)0x0002)  /* Pin 1 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_2</emphasis>&#160;&#160;&#160;((uint16_t)0x0004)  /* Pin 2 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_3</emphasis>&#160;&#160;&#160;((uint16_t)0x0008)  /* Pin 3 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_4</emphasis>&#160;&#160;&#160;((uint16_t)0x0010)  /* Pin 4 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_5</emphasis>&#160;&#160;&#160;((uint16_t)0x0020)  /* Pin 5 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_6</emphasis>&#160;&#160;&#160;((uint16_t)0x0040)  /* Pin 6 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_7</emphasis>&#160;&#160;&#160;((uint16_t)0x0080)  /* Pin 7 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_8</emphasis>&#160;&#160;&#160;((uint16_t)0x0100)  /* Pin 8 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_9</emphasis>&#160;&#160;&#160;((uint16_t)0x0200)  /* Pin 9 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_10</emphasis>&#160;&#160;&#160;((uint16_t)0x0400)  /* Pin 10 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_11</emphasis>&#160;&#160;&#160;((uint16_t)0x0800)  /* Pin 11 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_12</emphasis>&#160;&#160;&#160;((uint16_t)0x1000)  /* Pin 12 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_13</emphasis>&#160;&#160;&#160;((uint16_t)0x2000)  /* Pin 13 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_14</emphasis>&#160;&#160;&#160;((uint16_t)0x4000)  /* Pin 14 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_15</emphasis>&#160;&#160;&#160;((uint16_t)0x8000)  /* Pin 15 selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Pin_All</emphasis>&#160;&#160;&#160;((uint16_t)0xFFFF)  /* All pins selected */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_GPIO_PIN</emphasis>(PIN)&#160;&#160;&#160;((((PIN) &amp; (uint16_t)0x00) == 0x00) &amp;&amp; ((PIN) != (uint16_t)0x00))</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o__pins__define_1gaddf7154b7f30b7c0a70f3aeaff5ddffc">IS_GET_GPIO_PIN</link>(PIN)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource0</emphasis>&#160;&#160;&#160;((uint8_t)0x00)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource1</emphasis>&#160;&#160;&#160;((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource2</emphasis>&#160;&#160;&#160;((uint8_t)0x02)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource3</emphasis>&#160;&#160;&#160;((uint8_t)0x03)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource4</emphasis>&#160;&#160;&#160;((uint8_t)0x04)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource5</emphasis>&#160;&#160;&#160;((uint8_t)0x05)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource6</emphasis>&#160;&#160;&#160;((uint8_t)0x06)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource7</emphasis>&#160;&#160;&#160;((uint8_t)0x07)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource8</emphasis>&#160;&#160;&#160;((uint8_t)0x08)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource9</emphasis>&#160;&#160;&#160;((uint8_t)0x09)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource10</emphasis>&#160;&#160;&#160;((uint8_t)0x0A)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource11</emphasis>&#160;&#160;&#160;((uint8_t)0x0B)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource12</emphasis>&#160;&#160;&#160;((uint8_t)0x0C)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource13</emphasis>&#160;&#160;&#160;((uint8_t)0x0D)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource14</emphasis>&#160;&#160;&#160;((uint8_t)0x0E)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_PinSource15</emphasis>&#160;&#160;&#160;((uint8_t)0x0F)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o___pin__sources_1ga689e4e72591136b6a8d4df9d895181f7">IS_GPIO_PIN_SOURCE</link>(PINSOURCE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_RTC_50Hz</emphasis>&#160;&#160;&#160;((uint8_t)0x00)  /* RTC_50Hz Alternate Function mapping */</para>

<para>AF 0 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_MCO</emphasis>&#160;&#160;&#160;((uint8_t)0x00)  /* MCO (MCO1 and MCO2) Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TAMPER</emphasis>&#160;&#160;&#160;((uint8_t)0x00)  /* TAMPER (TAMPER_1 and TAMPER_2) Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_SWJ</emphasis>&#160;&#160;&#160;((uint8_t)0x00)  /* SWJ (SWD and JTAG) Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TRACE</emphasis>&#160;&#160;&#160;((uint8_t)0x00)  /* TRACE Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM1</emphasis>&#160;&#160;&#160;((uint8_t)0x01)  /* TIM1 Alternate Function mapping */</para>

<para>AF 1 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM2</emphasis>&#160;&#160;&#160;((uint8_t)0x01)  /* TIM2 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM3</emphasis>&#160;&#160;&#160;((uint8_t)0x02)  /* TIM3 Alternate Function mapping */</para>

<para>AF 2 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM4</emphasis>&#160;&#160;&#160;((uint8_t)0x02)  /* TIM4 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM5</emphasis>&#160;&#160;&#160;((uint8_t)0x02)  /* TIM5 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM8</emphasis>&#160;&#160;&#160;((uint8_t)0x03)  /* TIM8 Alternate Function mapping */</para>

<para>AF 3 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM9</emphasis>&#160;&#160;&#160;((uint8_t)0x03)  /* TIM9 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM10</emphasis>&#160;&#160;&#160;((uint8_t)0x03)  /* TIM10 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM11</emphasis>&#160;&#160;&#160;((uint8_t)0x03)  /* TIM11 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_I2C1</emphasis>&#160;&#160;&#160;((uint8_t)0x04)  /* I2C1 Alternate Function mapping */</para>

<para>AF 4 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_I2C2</emphasis>&#160;&#160;&#160;((uint8_t)0x04)  /* I2C2 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_I2C3</emphasis>&#160;&#160;&#160;((uint8_t)0x04)  /* I2C3 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_SPI1</emphasis>&#160;&#160;&#160;((uint8_t)0x05)  /* SPI1 Alternate Function mapping */</para>

<para>AF 5 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_SPI2</emphasis>&#160;&#160;&#160;((uint8_t)0x05)  /* SPI2/I2S2 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_SPI3</emphasis>&#160;&#160;&#160;((uint8_t)0x06)  /* SPI3/I2S3 Alternate Function mapping */</para>

<para>AF 6 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_USART1</emphasis>&#160;&#160;&#160;((uint8_t)0x07)  /* USART1 Alternate Function mapping */</para>

<para>AF 7 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_USART2</emphasis>&#160;&#160;&#160;((uint8_t)0x07)  /* USART2 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_USART3</emphasis>&#160;&#160;&#160;((uint8_t)0x07)  /* USART3 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_I2S3ext</emphasis>&#160;&#160;&#160;((uint8_t)0x07)  /* I2S3ext Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_UART4</emphasis>&#160;&#160;&#160;((uint8_t)0x08)  /* UART4 Alternate Function mapping */</para>

<para>AF 8 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_UART5</emphasis>&#160;&#160;&#160;((uint8_t)0x08)  /* UART5 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_USART6</emphasis>&#160;&#160;&#160;((uint8_t)0x08)  /* USART6 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_CAN1</emphasis>&#160;&#160;&#160;((uint8_t)0x09)  /* CAN1 Alternate Function mapping */</para>

<para>AF 9 selection. </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_CAN2</emphasis>&#160;&#160;&#160;((uint8_t)0x09)  /* CAN2 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM12</emphasis>&#160;&#160;&#160;((uint8_t)0x09)  /* TIM12 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM13</emphasis>&#160;&#160;&#160;((uint8_t)0x09)  /* TIM13 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_TIM14</emphasis>&#160;&#160;&#160;((uint8_t)0x09)  /* TIM14 Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_OTG_FS</emphasis>&#160;&#160;&#160;((uint8_t)0xA)  /* OTG_FS Alternate Function mapping */</para>

<para>AF 10 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_OTG_HS</emphasis>&#160;&#160;&#160;((uint8_t)0xA)  /* OTG_HS Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_ETH</emphasis>&#160;&#160;&#160;((uint8_t)0x0B)  /* ETHERNET Alternate Function mapping */</para>

<para>AF 11 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_FSMC</emphasis>&#160;&#160;&#160;((uint8_t)0xC)  /* FSMC Alternate Function mapping */</para>

<para>AF 12 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_OTG_HS_FS</emphasis>&#160;&#160;&#160;((uint8_t)0xC)  /* OTG HS configured in FS, Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_SDIO</emphasis>&#160;&#160;&#160;((uint8_t)0xC)  /* SDIO Alternate Function mapping */</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_DCMI</emphasis>&#160;&#160;&#160;((uint8_t)0x0D)  /* DCMI Alternate Function mapping */</para>

<para>AF 13 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_EVENTOUT</emphasis>&#160;&#160;&#160;((uint8_t)0x0F)  /* EVENTOUT Alternate Function mapping */</para>

<para>AF 15 selection <?linebreak?> </para>
</listitem>
            <listitem><para>#define <link linkend="_group___g_p_i_o___alternat__function__selection__define_1ga79eead44ddc05f1aa13d93c69196bced">IS_GPIO_AF</link>(AF)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_Mode_AIN</emphasis>&#160;&#160;&#160;<link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6e5c0d7e6d2e22b834b24e1ca1d6d0db">GPIO_Mode_AN</link></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_OTG1_FS</emphasis>&#160;&#160;&#160;<link linkend="_group___g_p_i_o___alternat__function__selection__define_1gaeba0aeefec841e505170efc7762ae588">GPIO_AF_OTG_FS</link></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_OTG2_HS</emphasis>&#160;&#160;&#160;GPIO_AF_OTG_HS</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">GPIO_AF_OTG2_FS</emphasis>&#160;&#160;&#160;GPIO_AF_OTG_HS_FS</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group___g_p_i_o_1ga1347339e1c84a196fabbb31205eec5d4">GPIOMode_TypeDef</link> { <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a484aa18a6156ce916049b334ba1839de">GPIO_Mode_IN</link> = 0x00
, <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a60f1d530f4119efcad8e1a68c890c6a6">GPIO_Mode_OUT</link> = 0x01
, <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6d44c35c6c5008d85bac9251a867e701">GPIO_Mode_AF</link> = 0x02
, <link linkend="_group___g_p_i_o_1gga1347339e1c84a196fabbb31205eec5d4a6e5c0d7e6d2e22b834b24e1ca1d6d0db">GPIO_Mode_AN</link> = 0x03
 }</para>

<para>GPIO Configuration Mode enumeration. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1gae74212e8d66c389f47326b06bdf6d2ab"/>enum <link linkend="_group___g_p_i_o_1gae74212e8d66c389f47326b06bdf6d2ab">GPIOOType_TypeDef</link> { <emphasis role="strong">GPIO_OType_PP</emphasis> = 0x00
, <emphasis role="strong">GPIO_OType_OD</emphasis> = 0x01
 }</para>

<para>GPIO Output type enumeration. </para>
</listitem>
            <listitem><para>enum <link linkend="_group___g_p_i_o_1ga062ad92b67b4a1f301c161022cf3ba8e">GPIOSpeed_TypeDef</link> { <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9bff9e174639332007c914483361be18">GPIO_Speed_2MHz</link> = 0x00
, <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea59a0acdf2ccd1b4b8d507e845e497c62">GPIO_Speed_25MHz</link> = 0x01
, <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea9c47db10456202ac05134b12738ce581">GPIO_Speed_50MHz</link> = 0x02
, <link linkend="_group___g_p_i_o_1gga062ad92b67b4a1f301c161022cf3ba8ea195a0e73cd63d7f5b5d41bd0155eacbb">GPIO_Speed_100MHz</link> = 0x03
 }</para>

<para>GPIO Output Maximum frequency enumeration. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1gafb7ecd99c44b4fd702d669304a36c2c8"/>enum <link linkend="_group___g_p_i_o_1gafb7ecd99c44b4fd702d669304a36c2c8">GPIOPuPd_TypeDef</link> { <emphasis role="strong">GPIO_PuPd_NOPULL</emphasis> = 0x00
, <emphasis role="strong">GPIO_PuPd_UP</emphasis> = 0x01
, <emphasis role="strong">GPIO_PuPd_DOWN</emphasis> = 0x02
 }</para>

<para>GPIO Configuration PullUp PullDown enumeration. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19"/>enum <link linkend="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19">BitAction</link> { <emphasis role="strong">Bit_RESET</emphasis> = 0
, <emphasis role="strong">Bit_SET</emphasis>
 }</para>

<para>GPIO Bit SET and Bit RESET enumeration. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gaa60bdf3182c44b5fa818f237042f52ee">GPIO_DeInit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx)</para>

<para>Deinitializes the GPIOx peripheral registers to their default reset values. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga71abf9404261370d03cca449b88d3a65">GPIO_Init</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, <link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> *GPIO_InitStruct)</para>

<para>Initializes the GPIOx peripheral according to the specified parameters in the GPIO_InitStruct. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gab28de41278e7f8c63d0851e2733b10df">GPIO_StructInit</link> (<link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link> *GPIO_InitStruct)</para>

<para>Fills each GPIO_InitStruct member with its default value. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gad2f2e615928c69fd0d8c641a7cedaafc">GPIO_PinLockConfig</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Locks GPIO Pins configuration registers. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___g_p_i_o_1ga98772ef6b639b3fa06c8ae5ba28d3aaa">GPIO_ReadInputDataBit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Reads the specified input port pin. </para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group___g_p_i_o_1ga139a33adc8409288e9f193bbebb5a0f7">GPIO_ReadInputData</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx)</para>

<para>Reads the specified GPIO input data port. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___g_p_i_o_1ga138270f8695b105b7c6ed405792919c1">GPIO_ReadOutputDataBit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Reads the specified output data port bit. </para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group___g_p_i_o_1gaf8938a34280b7dc3e39872a7c17bb323">GPIO_ReadOutputData</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx)</para>

<para>Reads the specified GPIO output data port. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga9e1352eed7c6620e18af2d86f6b6ff8e">GPIO_SetBits</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Sets the selected data port bits. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga6fcd35b207a66608dd2c9d7de9247dc8">GPIO_ResetBits</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Clears the selected data port bits. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga8f7b237fd744d9f7456fbe0da47a9b80">GPIO_WriteBit</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin, <link linkend="_group___g_p_i_o_1ga176130b21c0e719121470a6042d4cf19">BitAction</link> BitVal)</para>

<para>Sets or clears the selected data port bit. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gaa925f19c8547a00c7a0c269a84873bf9">GPIO_Write</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t PortVal)</para>

<para>Writes data to the specified GPIO data port. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1gac1b837c66258872740d5f89f23549ab1">GPIO_ToggleBits</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_Pin)</para>

<para>Toggles the specified GPIO pins.. </para>
</listitem>
            <listitem><para>void <link linkend="_group___g_p_i_o_1ga0a77617a322562ae84f8d72486032c5d">GPIO_PinAFConfig</link> (<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link> *GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)</para>

<para>Changes the mapping of the specified pin. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file contains all the functions prototypes for the GPIO firmware library. </para>

<para><formalpara><title>Author</title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version</title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date</title>

<para>30-September-2011 </para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
</section>
</section>
