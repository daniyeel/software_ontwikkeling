<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_logic__layer_8h" xml:lang="en-US">
<title>CUBE_IDE/VGA/Core/Inc/logic_layer.h File Reference</title>
<indexterm><primary>CUBE_IDE/VGA/Core/Inc/logic_layer.h</primary></indexterm>
<para>

<para>This file contains the functions which are used in the source file &apos;<link linkend="_logic__layer_8c">logic_layer.c</link>&apos;. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;UART_communication.h&quot;<?linebreak?>#include &quot;stm32_ub_vga_screen.h&quot;<?linebreak?>#include &quot;API_functions.h&quot;<?linebreak?>#include &quot;error.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE_STORAGE</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a1eb73c104b484cf18752169509cebfe2"/>#define <emphasis role="strong">MAX_CMD_LEN</emphasis>&#160;&#160;&#160;12</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a2eff7ee13b6df8517cb6efa07d5ec8fa"/>#define <emphasis role="strong">MAX_COL_LEN</emphasis>&#160;&#160;&#160;13</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a45db13d622cb21897aa934e5ad411c83"/>#define <emphasis role="strong">LINE_LEN</emphasis>&#160;&#160;&#160;5</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1ad7d05f1373777892fc07f4f8597cb43d"/>#define <emphasis role="strong">RECTANGLE_LEN</emphasis>&#160;&#160;&#160;10</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1aaea5ee2b130fb8ccc4b618256b9ca893"/>#define <emphasis role="strong">CLEAR_LEN</emphasis>&#160;&#160;&#160;12</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a59caef8210fc2914e7f13d3812a27b0d"/>#define <emphasis role="strong">TEXT_LEN</emphasis>&#160;&#160;&#160;6</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a29023bd18e246bb3570978890e1e1d5d"/>#define <emphasis role="strong">BITMAP_LEN</emphasis>&#160;&#160;&#160;7</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1aba25e817ee9c0083759288ffcefafe43"/>#define <emphasis role="strong">LB_ASCII_NUMBERS</emphasis>&#160;&#160;&#160;48</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a021157b7758974b8ece0bed2f7558a24"/>#define <emphasis role="strong">UB_ASCII_NUMBERS</emphasis>&#160;&#160;&#160;57</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a90784bc1be7629b9236d968144136c7b"/>#define <emphasis role="strong">LB_ASCII_LETTERS</emphasis>&#160;&#160;&#160;97</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a63fe9b07f42bdc550301e25d11255421"/>#define <emphasis role="strong">UB_ASCII_LETTERS</emphasis>&#160;&#160;&#160;122</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1aa8cecfc5c5c054d2875c03e77b7be15d"/>#define <emphasis role="strong">TRUE</emphasis>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1aa93f0eb578d23995850d61f7d61c55c1"/>#define <emphasis role="strong">FALSE</emphasis>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a1b5f638add6510a6df83ef3b3941b238"/>#define <emphasis role="strong">ERROR_OFF</emphasis>&#160;&#160;&#160;5</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a1eded75f6d534cbf8ef3d774e8110cde"/>typedef struct <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE_STORAGE</link> <emphasis role="strong">PARSE</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_logic__layer_8h_1a15c01057fb2bcfae12d3c346561c390a"/>typedef struct <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE_STORAGE</link> * <emphasis role="strong">PPARSE</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_logic__layer_8h_1a8defaa134a23a988d2749fc0171427d2">parse_cmd</link> (<link linkend="_struct_u_a_r_t___communication">UART</link> data)</para>

<para>Function that parses the command of the received script. </para>
</listitem>
            <listitem><para>int <link linkend="_logic__layer_8h_1a243278ee7910d29b226c9e84b21dbeaa">draw_options</link> (char cmd, <link linkend="_struct_u_a_r_t___communication">UART</link> data)</para>

<para>Function that determines with the command which function should be used, Here the script also get parsed further and decodes ASCII to useful data. </para>
</listitem>
            <listitem><para>int <link linkend="_logic__layer_8h_1afb5290ca19b5ae1c82c875bcfc3487ff">number_converter</link> (char ASCII)</para>

<para>Function that converts ASCII numbers to decimals. </para>
</listitem>
            <listitem><para><link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> <link linkend="_logic__layer_8h_1ae92a6df3661987925f02f126ee04ffc8">color_assign</link> (<link linkend="_struct_u_a_r_t___communication">UART</link> data, int i, <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> parsing)</para>

<para>Function that reads received script text and when possible converts this to the correspondiong color. </para>
</listitem>
            <listitem><para><link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> <link linkend="_logic__layer_8h_1a57c29aee18fbaa7bc92e6d1273fb2136">parse_data</link> (<link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> parsing, <link linkend="_struct_u_a_r_t___communication">UART</link> data, int LEN, int var_counter, int num_checker, int let_checker, int num_counter)</para>

<para>This function is used for parsing data and converts ASCII to decimals. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file contains the functions which are used in the source file &apos;<link linkend="_logic__layer_8c">logic_layer.c</link>&apos;. </para>

<para><formalpara><title>Authors</title>

<para>Skip Wijtman </para>
</formalpara>
<formalpara><title>Date</title>

<para>24-5-2023 </para>
</formalpara>
<formalpara><title>Version</title>

<para>1.2 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_logic__layer_8h_1ae92a6df3661987925f02f126ee04ffc8"/><section>
    <title>color_assign()</title>
<indexterm><primary>color_assign</primary><secondary>logic_layer.h</secondary></indexterm>
<indexterm><primary>logic_layer.h</primary><secondary>color_assign</secondary></indexterm>
<para><computeroutput><link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> color_assign (<link linkend="_struct_u_a_r_t___communication">UART</link> data, int i, <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> parsing)</computeroutput></para><para>

<para>Function that reads received script text and when possible converts this to the correspondiong color. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>is a struct variable with the received script </para>
</entry>
                            </row>
                            <row>
<entry>i</entry><entry>
<para>is the variable for the loop iterator</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>parsing is a struct variable with data info which are retrieved from the script </para>
</formalpara>
</para>
</section>
<anchor xml:id="_logic__layer_8h_1a243278ee7910d29b226c9e84b21dbeaa"/><section>
    <title>draw_options()</title>
<indexterm><primary>draw_options</primary><secondary>logic_layer.h</secondary></indexterm>
<indexterm><primary>logic_layer.h</primary><secondary>draw_options</secondary></indexterm>
<para><computeroutput>int draw_options (char cmd, <link linkend="_struct_u_a_r_t___communication">UART</link> data)</computeroutput></para><para>

<para>Function that determines with the command which function should be used, Here the script also get parsed further and decodes ASCII to useful data. </para>
</para>

<para>Here a switch-case is used to determine the received command, Cases 0 to 4 are numbered as followed:</para>

<para><orderedlist>
<listitem>
<para>lijn</para>
</listitem><listitem>
<para>rechthoek</para>
</listitem><listitem>
<para>clearscherm</para>
</listitem><listitem>
<para>tekst</para>
</listitem><listitem>
<para>bitmap</para>
</listitem></orderedlist>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>cmd</entry><entry>
<para>is a interger of the found command </para>
</entry>
                            </row>
                            <row>
<entry>data</entry><entry>
<para>is a struct variable with the received script</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Error code </para>
</formalpara>
</para>
</section>
<anchor xml:id="_logic__layer_8h_1afb5290ca19b5ae1c82c875bcfc3487ff"/><section>
    <title>number_converter()</title>
<indexterm><primary>number_converter</primary><secondary>logic_layer.h</secondary></indexterm>
<indexterm><primary>logic_layer.h</primary><secondary>number_converter</secondary></indexterm>
<para><computeroutput>int number_converter (char ASCII)</computeroutput></para><para>

<para>Function that converts ASCII numbers to decimals. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ASCII</entry><entry>
<para>is character of a ASCII number</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>decimal number </para>
</formalpara>
</para>
</section>
<anchor xml:id="_logic__layer_8h_1a8defaa134a23a988d2749fc0171427d2"/><section>
    <title>parse_cmd()</title>
<indexterm><primary>parse_cmd</primary><secondary>logic_layer.h</secondary></indexterm>
<indexterm><primary>logic_layer.h</primary><secondary>parse_cmd</secondary></indexterm>
<para><computeroutput>int parse_cmd (<link linkend="_struct_u_a_r_t___communication">UART</link> data)</computeroutput></para><para>

<para>Function that parses the command of the received script. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>is a struct variable with the received script</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Error code or the current index of found </para>
</formalpara>
</para>
</section>
<anchor xml:id="_logic__layer_8h_1a57c29aee18fbaa7bc92e6d1273fb2136"/><section>
    <title>parse_data()</title>
<indexterm><primary>parse_data</primary><secondary>logic_layer.h</secondary></indexterm>
<indexterm><primary>logic_layer.h</primary><secondary>parse_data</secondary></indexterm>
<para><computeroutput><link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> parse_data (<link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link> parsing, <link linkend="_struct_u_a_r_t___communication">UART</link> data, int LEN, int var_counter, int num_checker, int let_checker, int num_counter)</computeroutput></para><para>

<para>This function is used for parsing data and converts ASCII to decimals. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>parsing</entry><entry>
<para>is a struct variable that stores all needed data for functions </para>
</entry>
                            </row>
                            <row>
<entry>data</entry><entry>
<para>is a struct variable with the received script </para>
</entry>
                            </row>
                            <row>
<entry>LEN</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>var_counter</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>num_checker</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>let_checker</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>num_counter</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Error code </para>
</formalpara>
</para>
</section>
</section>
</section>
