<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_logic__layer_8h_source" xml:lang="en-US">
<title>logic_layer.h</title>
<indexterm><primary>CUBE_IDE/VGA/Core/Inc/logic_layer.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*******************************************************/</emphasis>
11 <emphasis role="preprocessor">#ifndef&#32;INC_LOGIC_LAYER_H_</emphasis>
12 <emphasis role="preprocessor">#define&#32;INC_LOGIC_LAYER_H_</emphasis>
13 
14 <emphasis role="comment">//#include&#32;&lt;library-header&gt;</emphasis>
15 
16 
17 <emphasis role="comment">//#include&#32;other&#32;&quot;user-header&quot;</emphasis>
18 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__u_a_r_t__communication_8h">UART_communication.h</link>&quot;</emphasis>
19 <emphasis role="preprocessor">#include&#32;&quot;stm32_ub_vga_screen.h&quot;</emphasis>
20 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__a_p_i__functions_8h">API_functions.h</link>&quot;</emphasis>
21 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_error_8h">error.h</link>&quot;</emphasis>
22 
23 
24 <emphasis role="comment">//struct&#32;definition</emphasis>
25 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE_STORAGE</link>
26 {
27 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;number_store[3];
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;color;
29 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;loop_iterator;
30 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;var_store[6];
31 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err_code;
32 }<link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link>,&#32;*<link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PPARSE</link>;
33 
34 <emphasis role="comment">//#define-statements</emphasis>
35 <emphasis role="preprocessor">#define&#32;MAX_CMD_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;12&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Defines&#32;for&#32;loops</emphasis>
36 <emphasis role="preprocessor">#define&#32;MAX_COL_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;13</emphasis>
37 
38 <emphasis role="preprocessor">#define&#32;LINE_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Defines&#32;to&#32;skip&#32;the&#32;command&#32;in&#32;the&#32;received&#32;array</emphasis>
39 <emphasis role="preprocessor">#define&#32;RECTANGLE_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;10</emphasis>
40 <emphasis role="preprocessor">#define&#32;CLEAR_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;12</emphasis>
41 <emphasis role="preprocessor">#define&#32;TEXT_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;6</emphasis>
42 <emphasis role="preprocessor">#define&#32;BITMAP_LEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;7</emphasis>
43 
44 <emphasis role="preprocessor">#define&#32;LB_ASCII_NUMBERS&#32;&#32;&#32;&#32;48&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Defines&#32;to&#32;mark&#32;the&#32;lower&#32;and&#32;upper&#32;bounds&#32;of&#32;the&#32;ASCII&#32;numbers</emphasis>
45 <emphasis role="preprocessor">#define&#32;UB_ASCII_NUMBERS&#32;&#32;&#32;&#32;57</emphasis>
46 
47 <emphasis role="preprocessor">#define&#32;LB_ASCII_LETTERS&#32;&#32;&#32;&#32;97&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;Defines&#32;to&#32;mark&#32;the&#32;lower&#32;and&#32;upper&#32;bounds&#32;of&#32;the&#32;ASCII&#32;lowercase&#32;letters</emphasis>
48 <emphasis role="preprocessor">#define&#32;UB_ASCII_LETTERS&#32;&#32;&#32;&#32;122</emphasis>
49 
50 <emphasis role="preprocessor">#define&#32;TRUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
51 <emphasis role="preprocessor">#define&#32;FALSE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
52 
53 <emphasis role="preprocessor">#define&#32;ERROR_OFF&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5</emphasis>
54 
55 <emphasis role="comment">//external&#32;vars</emphasis>
56 
57 <emphasis role="comment">//prototype&#32;user&#32;functions</emphasis>
58 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_logic__layer_8h_1a8defaa134a23a988d2749fc0171427d2">parse_cmd</link>(<link linkend="_struct_u_a_r_t___communication">UART</link>&#32;data);
59 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_logic__layer_8h_1a243278ee7910d29b226c9e84b21dbeaa">draw_options</link>(<emphasis role="keywordtype">char</emphasis>&#32;cmd,&#32;<link linkend="_struct_u_a_r_t___communication">UART</link>&#32;data);
60 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_logic__layer_8h_1afb5290ca19b5ae1c82c875bcfc3487ff">number_converter</link>(<emphasis role="keywordtype">char</emphasis>&#32;ASCII);
61 <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link>&#32;<link linkend="_logic__layer_8h_1ae92a6df3661987925f02f126ee04ffc8">color_assign</link>(<link linkend="_struct_u_a_r_t___communication">UART</link>&#32;data,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link>&#32;parsing);
62 <link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link>&#32;<link linkend="_logic__layer_8h_1a57c29aee18fbaa7bc92e6d1273fb2136">parse_data</link>(<link linkend="_struct_p_a_r_s_e___s_t_o_r_a_g_e">PARSE</link>&#32;parsing,&#32;<link linkend="_struct_u_a_r_t___communication">UART</link>&#32;data,&#32;<emphasis role="keywordtype">int</emphasis>&#32;LEN&#32;,&#32;<emphasis role="keywordtype">int</emphasis>&#32;var_counter,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_checker,&#32;<emphasis role="keywordtype">int</emphasis>&#32;let_checker,&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_counter);
63 
64 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INC_LOGIC_LAYER_H_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
