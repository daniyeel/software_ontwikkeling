<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f4xx__rcc_8h" xml:lang="en-US">
<title>CUBE_IDE/VGA/Core/Inc/stm32f4xx_rcc.h File Reference</title>
<indexterm><primary>CUBE_IDE/VGA/Core/Inc/stm32f4xx_rcc.h</primary></indexterm>
<para>

<para>This file contains all the functions prototypes for the RCC firmware library. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;stm32f4xx.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_r_c_c___clocks_type_def">RCC_ClocksTypeDef</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <emphasis role="strong">RCC_HSE_OFF</emphasis>&#160;&#160;&#160;((uint8_t)0x00)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HSE_ON</emphasis>&#160;&#160;&#160;((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HSE_Bypass</emphasis>&#160;&#160;&#160;((uint8_t)0x05)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___h_s_e__configuration_1ga287bbcafd73d07ec915c2f793301908a">IS_RCC_HSE</link>(HSE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_PLLSource_HSI</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_PLLSource_HSE</emphasis>&#160;&#160;&#160;((uint32_t)0x00400000)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___p_l_l___clock___source_1ga8a8a84a16989bb4e5aca1af65ccf9a1b">IS_RCC_PLL_SOURCE</link>(SOURCE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_PLLM_VALUE</emphasis>(VALUE)&#160;&#160;&#160;((VALUE) &lt;= 63)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_PLLN_VALUE</emphasis>(VALUE)&#160;&#160;&#160;((192 &lt;= (VALUE)) &amp;&amp; ((VALUE) &lt;= 432))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_PLLP_VALUE</emphasis>(VALUE)&#160;&#160;&#160;(((VALUE) == 2) || ((VALUE) == 4) || ((VALUE) == 6) || ((VALUE) == 8))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_PLLQ_VALUE</emphasis>(VALUE)&#160;&#160;&#160;((4 &lt;= (VALUE)) &amp;&amp; ((VALUE) &lt;= 15))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_PLLI2SN_VALUE</emphasis>(VALUE)&#160;&#160;&#160;((192 &lt;= (VALUE)) &amp;&amp; ((VALUE) &lt;= 432))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_PLLI2SR_VALUE</emphasis>(VALUE)&#160;&#160;&#160;((2 &lt;= (VALUE)) &amp;&amp; ((VALUE) &lt;= 7))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLKSource_HSI</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLKSource_HSE</emphasis>&#160;&#160;&#160;((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLKSource_PLLCLK</emphasis>&#160;&#160;&#160;((uint32_t)0x00000002)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___system___clock___source_1gaae9d6172a72b0a90cb3703aa59258c57">IS_RCC_SYSCLK_SOURCE</link>(SOURCE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div2</emphasis>&#160;&#160;&#160;((uint32_t)0x00000080)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div4</emphasis>&#160;&#160;&#160;((uint32_t)0x00000090)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div8</emphasis>&#160;&#160;&#160;((uint32_t)0x000000A0)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div16</emphasis>&#160;&#160;&#160;((uint32_t)0x000000B0)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div64</emphasis>&#160;&#160;&#160;((uint32_t)0x000000C0)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div128</emphasis>&#160;&#160;&#160;((uint32_t)0x000000D0)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div256</emphasis>&#160;&#160;&#160;((uint32_t)0x000000E0)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_SYSCLK_Div512</emphasis>&#160;&#160;&#160;((uint32_t)0x000000F0)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___a_h_b___clock___source_1ga6e9f1c193a2f41bcb3c2f7fa8459b5b3">IS_RCC_HCLK</link>(HCLK)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HCLK_Div1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HCLK_Div2</emphasis>&#160;&#160;&#160;((uint32_t)0x00001000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HCLK_Div4</emphasis>&#160;&#160;&#160;((uint32_t)0x00001400)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HCLK_Div8</emphasis>&#160;&#160;&#160;((uint32_t)0x00001800)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_HCLK_Div16</emphasis>&#160;&#160;&#160;((uint32_t)0x00001C00)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___a_p_b1___a_p_b2___clock___source_1gab70f1257ea47c1da4def8e351af4d9f2">IS_RCC_PCLK</link>(PCLK)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_LSIRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_LSERDY</emphasis>&#160;&#160;&#160;((uint8_t)0x02)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_HSIRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x04)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_HSERDY</emphasis>&#160;&#160;&#160;((uint8_t)0x08)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_PLLRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x10)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_PLLI2SRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x20)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_IT_CSS</emphasis>&#160;&#160;&#160;((uint8_t)0x80)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_IT</emphasis>(IT)&#160;&#160;&#160;((((IT) &amp; (uint8_t)0xC0) == 0x00) &amp;&amp; ((IT) != 0x00))</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___interrupt___source_1ga7a1b771d6d9c2d8346ab58a1f046f6a6">IS_RCC_GET_IT</link>(IT)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_CLEAR_IT</emphasis>(IT)&#160;&#160;&#160;((((IT) &amp; (uint8_t)0x40) == 0x00) &amp;&amp; ((IT) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_LSE_OFF</emphasis>&#160;&#160;&#160;((uint8_t)0x00)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_LSE_ON</emphasis>&#160;&#160;&#160;((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_LSE_Bypass</emphasis>&#160;&#160;&#160;((uint8_t)0x04)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___l_s_e___configuration_1ga95d2678bf8f46e932e7cba75619a4d2c">IS_RCC_LSE</link>(LSE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_LSE</emphasis>&#160;&#160;&#160;((uint32_t)0x00000100)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_LSI</emphasis>&#160;&#160;&#160;((uint32_t)0x00000200)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div2</emphasis>&#160;&#160;&#160;((uint32_t)0x00020300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div3</emphasis>&#160;&#160;&#160;((uint32_t)0x00030300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div4</emphasis>&#160;&#160;&#160;((uint32_t)0x00040300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div5</emphasis>&#160;&#160;&#160;((uint32_t)0x00050300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div6</emphasis>&#160;&#160;&#160;((uint32_t)0x00060300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div7</emphasis>&#160;&#160;&#160;((uint32_t)0x00070300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div8</emphasis>&#160;&#160;&#160;((uint32_t)0x00080300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div9</emphasis>&#160;&#160;&#160;((uint32_t)0x00090300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div10</emphasis>&#160;&#160;&#160;((uint32_t)0x000A0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div11</emphasis>&#160;&#160;&#160;((uint32_t)0x000B0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div12</emphasis>&#160;&#160;&#160;((uint32_t)0x000C0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div13</emphasis>&#160;&#160;&#160;((uint32_t)0x000D0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div14</emphasis>&#160;&#160;&#160;((uint32_t)0x000E0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div15</emphasis>&#160;&#160;&#160;((uint32_t)0x000F0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div16</emphasis>&#160;&#160;&#160;((uint32_t)0x00100300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div17</emphasis>&#160;&#160;&#160;((uint32_t)0x00110300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div18</emphasis>&#160;&#160;&#160;((uint32_t)0x00120300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div19</emphasis>&#160;&#160;&#160;((uint32_t)0x00130300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div20</emphasis>&#160;&#160;&#160;((uint32_t)0x00140300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div21</emphasis>&#160;&#160;&#160;((uint32_t)0x00150300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div22</emphasis>&#160;&#160;&#160;((uint32_t)0x00160300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div23</emphasis>&#160;&#160;&#160;((uint32_t)0x00170300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div24</emphasis>&#160;&#160;&#160;((uint32_t)0x00180300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div25</emphasis>&#160;&#160;&#160;((uint32_t)0x00190300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div26</emphasis>&#160;&#160;&#160;((uint32_t)0x001A0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div27</emphasis>&#160;&#160;&#160;((uint32_t)0x001B0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div28</emphasis>&#160;&#160;&#160;((uint32_t)0x001C0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div29</emphasis>&#160;&#160;&#160;((uint32_t)0x001D0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div30</emphasis>&#160;&#160;&#160;((uint32_t)0x001E0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_RTCCLKSource_HSE_Div31</emphasis>&#160;&#160;&#160;((uint32_t)0x001F0300)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_RTCCLK_SOURCE</emphasis>(SOURCE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_I2S2CLKSource_PLLI2S</emphasis>&#160;&#160;&#160;((uint8_t)0x00)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_I2S2CLKSource_Ext</emphasis>&#160;&#160;&#160;((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_I2SCLK_SOURCE</emphasis>(SOURCE)&#160;&#160;&#160;(((SOURCE) == RCC_I2S2CLKSource_PLLI2S) || ((SOURCE) == RCC_I2S2CLKSource_Ext))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOA</emphasis>&#160;&#160;&#160;((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOB</emphasis>&#160;&#160;&#160;((uint32_t)0x00000002)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOC</emphasis>&#160;&#160;&#160;((uint32_t)0x00000004)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOD</emphasis>&#160;&#160;&#160;((uint32_t)0x00000008)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOE</emphasis>&#160;&#160;&#160;((uint32_t)0x00000010)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOF</emphasis>&#160;&#160;&#160;((uint32_t)0x00000020)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOG</emphasis>&#160;&#160;&#160;((uint32_t)0x00000040)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOH</emphasis>&#160;&#160;&#160;((uint32_t)0x00000080)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_GPIOI</emphasis>&#160;&#160;&#160;((uint32_t)0x00000100)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_CRC</emphasis>&#160;&#160;&#160;((uint32_t)0x00001000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_FLITF</emphasis>&#160;&#160;&#160;((uint32_t)0x00008000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_SRAM1</emphasis>&#160;&#160;&#160;((uint32_t)0x00010000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_SRAM2</emphasis>&#160;&#160;&#160;((uint32_t)0x00020000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_BKPSRAM</emphasis>&#160;&#160;&#160;((uint32_t)0x00040000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_CCMDATARAMEN</emphasis>&#160;&#160;&#160;((uint32_t)0x00100000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_DMA1</emphasis>&#160;&#160;&#160;((uint32_t)0x00200000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_DMA2</emphasis>&#160;&#160;&#160;((uint32_t)0x00400000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_ETH_MAC</emphasis>&#160;&#160;&#160;((uint32_t)0x02000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_ETH_MAC_Tx</emphasis>&#160;&#160;&#160;((uint32_t)0x04000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_ETH_MAC_Rx</emphasis>&#160;&#160;&#160;((uint32_t)0x08000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_ETH_MAC_PTP</emphasis>&#160;&#160;&#160;((uint32_t)0x10000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_OTG_HS</emphasis>&#160;&#160;&#160;((uint32_t)0x20000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB1Periph_OTG_HS_ULPI</emphasis>&#160;&#160;&#160;((uint32_t)0x40000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_AHB1_CLOCK_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0x818BEE00) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_AHB1_RESET_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0xDD9FEE00) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_AHB1_LPMODE_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0x81986E00) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB2Periph_DCMI</emphasis>&#160;&#160;&#160;((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB2Periph_CRYP</emphasis>&#160;&#160;&#160;((uint32_t)0x00000010)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB2Periph_HASH</emphasis>&#160;&#160;&#160;((uint32_t)0x00000020)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB2Periph_RNG</emphasis>&#160;&#160;&#160;((uint32_t)0x00000040)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB2Periph_OTG_FS</emphasis>&#160;&#160;&#160;((uint32_t)0x00000080)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_AHB2_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0xFFFFFF0E) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_AHB3Periph_FSMC</emphasis>&#160;&#160;&#160;((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_AHB3_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0xFFFFFFFE) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM2</emphasis>&#160;&#160;&#160;((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM3</emphasis>&#160;&#160;&#160;((uint32_t)0x00000002)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM4</emphasis>&#160;&#160;&#160;((uint32_t)0x00000004)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM5</emphasis>&#160;&#160;&#160;((uint32_t)0x00000008)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM6</emphasis>&#160;&#160;&#160;((uint32_t)0x00000010)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM7</emphasis>&#160;&#160;&#160;((uint32_t)0x00000020)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM12</emphasis>&#160;&#160;&#160;((uint32_t)0x00000040)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM13</emphasis>&#160;&#160;&#160;((uint32_t)0x00000080)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_TIM14</emphasis>&#160;&#160;&#160;((uint32_t)0x00000100)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_WWDG</emphasis>&#160;&#160;&#160;((uint32_t)0x00000800)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_SPI2</emphasis>&#160;&#160;&#160;((uint32_t)0x00004000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_SPI3</emphasis>&#160;&#160;&#160;((uint32_t)0x00008000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_USART2</emphasis>&#160;&#160;&#160;((uint32_t)0x00020000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_USART3</emphasis>&#160;&#160;&#160;((uint32_t)0x00040000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_UART4</emphasis>&#160;&#160;&#160;((uint32_t)0x00080000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_UART5</emphasis>&#160;&#160;&#160;((uint32_t)0x00100000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_I2C1</emphasis>&#160;&#160;&#160;((uint32_t)0x00200000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_I2C2</emphasis>&#160;&#160;&#160;((uint32_t)0x00400000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_I2C3</emphasis>&#160;&#160;&#160;((uint32_t)0x00800000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_CAN1</emphasis>&#160;&#160;&#160;((uint32_t)0x02000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_CAN2</emphasis>&#160;&#160;&#160;((uint32_t)0x04000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_PWR</emphasis>&#160;&#160;&#160;((uint32_t)0x10000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB1Periph_DAC</emphasis>&#160;&#160;&#160;((uint32_t)0x20000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_APB1_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0xC9013600) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_TIM1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_TIM8</emphasis>&#160;&#160;&#160;((uint32_t)0x00000002)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_USART1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000010)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_USART6</emphasis>&#160;&#160;&#160;((uint32_t)0x00000020)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_ADC</emphasis>&#160;&#160;&#160;((uint32_t)0x00000100)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_ADC1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000100)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_ADC2</emphasis>&#160;&#160;&#160;((uint32_t)0x00000200)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_ADC3</emphasis>&#160;&#160;&#160;((uint32_t)0x00000400)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_SDIO</emphasis>&#160;&#160;&#160;((uint32_t)0x00000800)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_SPI1</emphasis>&#160;&#160;&#160;((uint32_t)0x00001000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_SYSCFG</emphasis>&#160;&#160;&#160;((uint32_t)0x00004000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_TIM9</emphasis>&#160;&#160;&#160;((uint32_t)0x00010000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_TIM10</emphasis>&#160;&#160;&#160;((uint32_t)0x00020000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_APB2Periph_TIM11</emphasis>&#160;&#160;&#160;((uint32_t)0x00040000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_APB2_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0xFFF8A0CC) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_APB2_RESET_PERIPH</emphasis>(PERIPH)&#160;&#160;&#160;((((PERIPH) &amp; 0xFFF8A6CC) == 0x00) &amp;&amp; ((PERIPH) != 0x00))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Source_HSI</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Source_LSE</emphasis>&#160;&#160;&#160;((uint32_t)0x00200000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Source_HSE</emphasis>&#160;&#160;&#160;((uint32_t)0x00400000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Source_PLLCLK</emphasis>&#160;&#160;&#160;((uint32_t)0x00600000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Div_1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Div_2</emphasis>&#160;&#160;&#160;((uint32_t)0x04000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Div_3</emphasis>&#160;&#160;&#160;((uint32_t)0x05000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Div_4</emphasis>&#160;&#160;&#160;((uint32_t)0x06000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO1Div_5</emphasis>&#160;&#160;&#160;((uint32_t)0x07000000)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___m_c_o1___clock___source___prescaler_1ga073031d9c90c555f7874912b7e4905f6">IS_RCC_MCO1SOURCE</link>(SOURCE)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___m_c_o1___clock___source___prescaler_1ga8a8ff14a7fcdc6ef638ca8666e609c99">IS_RCC_MCO1DIV</link>(DIV)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Source_SYSCLK</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Source_PLLI2SCLK</emphasis>&#160;&#160;&#160;((uint32_t)0x40000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Source_HSE</emphasis>&#160;&#160;&#160;((uint32_t)0x80000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Source_PLLCLK</emphasis>&#160;&#160;&#160;((uint32_t)0xC0000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Div_1</emphasis>&#160;&#160;&#160;((uint32_t)0x00000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Div_2</emphasis>&#160;&#160;&#160;((uint32_t)0x20000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Div_3</emphasis>&#160;&#160;&#160;((uint32_t)0x28000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Div_4</emphasis>&#160;&#160;&#160;((uint32_t)0x30000000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_MCO2Div_5</emphasis>&#160;&#160;&#160;((uint32_t)0x38000000)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___m_c_o2___clock___source___prescaler_1ga99f4a9acbacb5e4d2b27bb9f4f2c0a2f">IS_RCC_MCO2SOURCE</link>(SOURCE)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___m_c_o2___clock___source___prescaler_1gab28570d78a518bc83f82a96e7b0b8a73">IS_RCC_MCO2DIV</link>(DIV)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_HSIRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x21)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_HSERDY</emphasis>&#160;&#160;&#160;((uint8_t)0x31)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_PLLRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x39)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_PLLI2SRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x3B)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_LSERDY</emphasis>&#160;&#160;&#160;((uint8_t)0x41)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_LSIRDY</emphasis>&#160;&#160;&#160;((uint8_t)0x61)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_BORRST</emphasis>&#160;&#160;&#160;((uint8_t)0x79)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_PINRST</emphasis>&#160;&#160;&#160;((uint8_t)0x7A)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_PORRST</emphasis>&#160;&#160;&#160;((uint8_t)0x7B)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_SFTRST</emphasis>&#160;&#160;&#160;((uint8_t)0x7C)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_IWDGRST</emphasis>&#160;&#160;&#160;((uint8_t)0x7D)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_WWDGRST</emphasis>&#160;&#160;&#160;((uint8_t)0x7E)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">RCC_FLAG_LPWRRST</emphasis>&#160;&#160;&#160;((uint8_t)0x7F)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___flag_1gaa27dea5bb62b26d0881e649770252158">IS_RCC_FLAG</link>(FLAG)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_RCC_CALIBRATION_VALUE</emphasis>(VALUE)&#160;&#160;&#160;((VALUE) &lt;= 0x1F)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_group___r_c_c_1ga413f6422be11b1334abe60b3bff2e062">RCC_DeInit</link> (void)</para>

<para>Resets the RCC clock configuration to the default reset state. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga523b06e73f6aa8a03e42299c855066a8">RCC_HSEConfig</link> (uint8_t RCC_HSE)</para>

<para>Configures the External High Speed oscillator (HSE). </para>
</listitem>
            <listitem><para>ErrorStatus <link linkend="_group___r_c_c_1gae0f15692614dd048ee4110a056f001dc">RCC_WaitForHSEStartUp</link> (void)</para>

<para>Waits for HSE start-up. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaa2d6a35f5c2e0f86317c3beb222677fc">RCC_AdjustHSICalibrationValue</link> (uint8_t HSICalibrationValue)</para>

<para>Adjusts the Internal High Speed oscillator (HSI) calibration value. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga0c6772a1e43765909495f57815ef69e2">RCC_HSICmd</link> (FunctionalState NewState)</para>

<para>Enables or disables the Internal High Speed oscillator (HSI). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga65209ab5c3589b249c7d70f978735ca6">RCC_LSEConfig</link> (uint8_t RCC_LSE)</para>

<para>Configures the External Low Speed oscillator (LSE). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga81e3ca29fd154ac2019bba6936d6d5ed">RCC_LSICmd</link> (FunctionalState NewState)</para>

<para>Enables or disables the Internal Low Speed oscillator (LSI). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga154b93e90bfdede2a874244a1ff1002e">RCC_PLLConfig</link> (uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PLLQ)</para>

<para>Configures the main PLL clock source, multiplication and division factors. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga84dee53c75e58fdb53571716593c2272">RCC_PLLCmd</link> (FunctionalState NewState)</para>

<para>Enables or disables the main PLL. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga4c15157382939a693c15620a4867e6ad">RCC_PLLI2SConfig</link> (uint32_t PLLI2SN, uint32_t PLLI2SR)</para>

<para>Configures the PLLI2S clock multiplication and division factors. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga2efe493a6337d5e0034bfcdfb0f541e4">RCC_PLLI2SCmd</link> (FunctionalState NewState)</para>

<para>Enables or disables the PLLI2S. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga0ff1fd7b9a8a49cdda11b7d7261c3494">RCC_ClockSecuritySystemCmd</link> (FunctionalState NewState)</para>

<para>Enables or disables the Clock Security System. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga15c9ecb6ef015ed008cb28e5b7a50531">RCC_MCO1Config</link> (uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div)</para>

<para>Selects the clock source to output on MCO1 pin(PA8). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaf50f10675b747de60c739e44e5c22aee">RCC_MCO2Config</link> (uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div)</para>

<para>Selects the clock source to output on MCO2 pin(PC9). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga3551a36a8f0a3dc96a74d6b939048337">RCC_SYSCLKConfig</link> (uint32_t RCC_SYSCLKSource)</para>

<para>Configures the system clock (SYSCLK). </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___r_c_c_1gaaeb32311c208b2a980841c9c884a41ea">RCC_GetSYSCLKSource</link> (void)</para>

<para>Returns the clock source used as system clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga9d0aec72e236c6cdf3a3a82dfb525491">RCC_HCLKConfig</link> (uint32_t RCC_SYSCLK)</para>

<para>Configures the AHB clock (HCLK). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga448137346d4292985d4e7a61dd1a824f">RCC_PCLK1Config</link> (uint32_t RCC_HCLK)</para>

<para>Configures the Low Speed APB clock (PCLK1). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga09f9c010a4adca9e036da42c2ca6126a">RCC_PCLK2Config</link> (uint32_t RCC_HCLK)</para>

<para>Configures the High Speed APB clock (PCLK2). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga3e9944fd1ed734275222bbb3e3f29993">RCC_GetClocksFreq</link> (<link linkend="_struct_r_c_c___clocks_type_def">RCC_ClocksTypeDef</link> *RCC_Clocks)</para>

<para>Returns the frequencies of different on chip clocks; SYSCLK, HCLK, PCLK1 and PCLK2. <?linebreak?> </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga1473d8a5a020642966359611c44181b0">RCC_RTCCLKConfig</link> (uint32_t RCC_RTCCLKSource)</para>

<para>Configures the RTC clock (RTCCLK). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga9802f84846df2cea8e369234ed13b159">RCC_RTCCLKCmd</link> (FunctionalState NewState)</para>

<para>Enables or disables the RTC clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga636c3b72f35391e67f12a551b15fa54a">RCC_BackupResetCmd</link> (FunctionalState NewState)</para>

<para>Forces or releases the Backup domain reset. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga6c56f8529988fcc8f4dbffbc1bab27d0">RCC_I2SCLKConfig</link> (uint32_t RCC_I2SCLKSource)</para>

<para>Configures the I2S clock source (I2SCLK). </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga80c89116820d48bb38db2e7d5e5a49b9">RCC_AHB1PeriphClockCmd</link> (uint32_t RCC_AHB1Periph, FunctionalState NewState)</para>

<para>Enables or disables the AHB1 peripheral clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaadffedbd87e796f01d9776b8ee01ff5e">RCC_AHB2PeriphClockCmd</link> (uint32_t RCC_AHB2Periph, FunctionalState NewState)</para>

<para>Enables or disables the AHB2 peripheral clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga4eb8c119f2e9bf2bd2e042d27f151338">RCC_AHB3PeriphClockCmd</link> (uint32_t RCC_AHB3Periph, FunctionalState NewState)</para>

<para>Enables or disables the AHB3 peripheral clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaee7cc5d73af7fe1986fceff8afd3973e">RCC_APB1PeriphClockCmd</link> (uint32_t RCC_APB1Periph, FunctionalState NewState)</para>

<para>Enables or disables the Low Speed APB (APB1) peripheral clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga56ff55caf8d835351916b40dd030bc87">RCC_APB2PeriphClockCmd</link> (uint32_t RCC_APB2Periph, FunctionalState NewState)</para>

<para>Enables or disables the High Speed APB (APB2) peripheral clock. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaa7c450567f4731d4f0615f63586cad86">RCC_AHB1PeriphResetCmd</link> (uint32_t RCC_AHB1Periph, FunctionalState NewState)</para>

<para>Forces or releases AHB1 peripheral reset. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gafb119d6d1955d1b8c361e8140845ac5a">RCC_AHB2PeriphResetCmd</link> (uint32_t RCC_AHB2Periph, FunctionalState NewState)</para>

<para>Forces or releases AHB2 peripheral reset. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaee44f159a1ca9ebdd7117bff387cd592">RCC_AHB3PeriphResetCmd</link> (uint32_t RCC_AHB3Periph, FunctionalState NewState)</para>

<para>Forces or releases AHB3 peripheral reset. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gab197ae4369c10b92640a733b40ed2801">RCC_APB1PeriphResetCmd</link> (uint32_t RCC_APB1Periph, FunctionalState NewState)</para>

<para>Forces or releases Low Speed APB (APB1) peripheral reset. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gad94553850ac07106a27ee85fec37efdf">RCC_APB2PeriphResetCmd</link> (uint32_t RCC_APB2Periph, FunctionalState NewState)</para>

<para>Forces or releases High Speed APB (APB2) peripheral reset. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga5cd0d5adbc7496d7005b208bd19ce255">RCC_AHB1PeriphClockLPModeCmd</link> (uint32_t RCC_AHB1Periph, FunctionalState NewState)</para>

<para>Enables or disables the AHB1 peripheral clock during Low Power (Sleep) mode. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga1ac5bb9676ae9b48e50d6a95de922ce3">RCC_AHB2PeriphClockLPModeCmd</link> (uint32_t RCC_AHB2Periph, FunctionalState NewState)</para>

<para>Enables or disables the AHB2 peripheral clock during Low Power (Sleep) mode. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga4e1df07cdfd81c068902d9d35fcc3911">RCC_AHB3PeriphClockLPModeCmd</link> (uint32_t RCC_AHB3Periph, FunctionalState NewState)</para>

<para>Enables or disables the AHB3 peripheral clock during Low Power (Sleep) mode. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga84dd64badb84768cbcf19e241cadff50">RCC_APB1PeriphClockLPModeCmd</link> (uint32_t RCC_APB1Periph, FunctionalState NewState)</para>

<para>Enables or disables the APB1 peripheral clock during Low Power (Sleep) mode. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga30365b9e0b4c5d7e98c2675c862ddd7e">RCC_APB2PeriphClockLPModeCmd</link> (uint32_t RCC_APB2Periph, FunctionalState NewState)</para>

<para>Enables or disables the APB2 peripheral clock during Low Power (Sleep) mode. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1gaa953aa226e9ce45300d535941e4dfe2f">RCC_ITConfig</link> (uint8_t RCC_IT, FunctionalState NewState)</para>

<para>Enables or disables the specified RCC interrupts. </para>
</listitem>
            <listitem><para>FlagStatus <link linkend="_group___r_c_c_1ga2897bdc52f272031c44fb1f72205d295">RCC_GetFlagStatus</link> (uint8_t RCC_FLAG)</para>

<para>Checks whether the specified RCC flag is set or not. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga53f909dbb15a54124419084ebda97d72">RCC_ClearFlag</link> (void)</para>

<para>Clears the RCC reset flags. The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST. </para>
</listitem>
            <listitem><para>ITStatus <link linkend="_group___r_c_c_1ga6126c99f398ee4be410ad76ae3aee18f">RCC_GetITStatus</link> (uint8_t RCC_IT)</para>

<para>Checks whether the specified RCC interrupt has occurred or not. </para>
</listitem>
            <listitem><para>void <link linkend="_group___r_c_c_1ga529842d165910f8f87e26115da36089b">RCC_ClearITPendingBit</link> (uint8_t RCC_IT)</para>

<para>Clears the RCC&apos;s interrupt pending bits. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file contains all the functions prototypes for the RCC firmware library. </para>

<para><formalpara><title>Author</title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version</title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date</title>

<para>30-September-2011 </para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
</section>
</section>
